---
  - hosts: localhost
    connection: local
    become: yes
    vars:
      docker_repo_key: "https://download.docker.com/linux/debian/gpg"
      docker_repo_key_path: /etc/apt/keyrings/docker-ce-keyring.gpg
      docker_repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker-ce-keyring.gpg] https://download.docker.com/linux/debian bullseye stable"
      docker_group: "docker"
      codium_repo: "deb [ signed-by=/usr/share/keyrings/vscodium-archive-keyring.gpg ] https://download.vscodium.com/debs vscodium main"
      vivaldi_url: "https://downloads.vivaldi.com/stable/vivaldi-stable_5.7.2921.60-1_amd64.deb"
      cargo_installs: [rustscan,feroxbuster]
    tasks:
    - name: Add Docker's official GPG key
      ansible.builtin.shell: |
        wget -qO - {{ docker_repo_key }} | gpg --dearmor | sudo dd of={{ docker_repo_key_path }}

    - name: Add Docker Repo
      ansible.builtin.apt_repository:
        repo: "{{ docker_repo }}"
        state: present

    - name: Add VS Codium GPG key
      ansible.builtin.shell: |
         wget -qO - https://gitlab.com/paulcarroty/vscodium-deb-rpm-repo/raw/master/pub.gpg | gpg --dearmor | sudo dd of=/usr/share/keyrings/vscodium-archive-keyring.gpg

    - name: Add VS Codium Repo
      ansible.builtin.apt_repository:
        repo: "{{ codium_repo }}"
        state: present

    - name: Download and install Vivaldi deb
      ansible.builtin.apt:
        deb: "{{ vivaldi_url }}"

    - name: Install Rust
      ansible.builtin.shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - name: Install Cargo packages
      with_items: "{{ cargo_installs }}"
      shell: "bash -lc 'cargo install -q {{ item }}'"
      loop: "{{ cargo_installs }}"
      register: op

    - name: Ensure all packages are up to date
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist

    - name: Installing any one-off packages from apt package manager
      ansible.builtin.package:
        name:
        - bloodhound
        - build-essential
        - bytecode-viewer
        - clang
        - cmake
        - codium
        - curl
        - default-jdk
        - default-jre
        - docker
        - docker-compose
        - eog
        - fish
        - flex
        - forensics-extra
        - gawk
        - gedit
        - ghidra
        - git
        - gobuster
        - golang-go
        - jq
        - jxplorer
        - libffi-dev
        - liblzma-dev
        - libssl-dev
        - libxml2-dev
        - ltrace
        - ncat
        - nodejs
        - npm
        - ntpdate
        - mingw-w64
        - patch
        - powershell
        - python3
        - python3-dev
        - python3-pip
        - p7zip-full
        - remmina
        - rlwrap
        - samba
        - seclists
        - strace
        - terminator
        - tmux
        - vim-gtk3
        - vivaldi-stable
        - xclip
        - xfce4-terminal
        - yarn
        - zaproxy
        - zlib1g-dev
        state: latest

    - name: Getting all interactive non-root users
      ansible.builtin.shell: "awk -F: '($3 >= 1000) && ($3 != 65534) { print $1 }' /etc/passwd"
      register: users

    - name: Add non-root users to the docker group
      loop: "{{ users.stdout_lines }}"
      ansible.builtin.user:
        name: "{{ item }}"
        groups: "{{ docker_group }}"
        append: yes

    - name: Add sudo-NOPASSWD to users
      loop: "{{ users.stdout_lines }}"
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        insertafter: EOF
        line: "{{ item }} ALL=(ALL) NOPASSWD: ALL"
        validate: /usr/sbin/visudo -cf %s

    - name: Check if CrackMapExec (CME) has been installed before
      ansible.builtin.stat:
        path: /usr/bin/cme
      register: cme_installed

    - name: Install CME
      ansible.builtin.shell: |
        curl -s https://api.github.com/repos/Porchetta-Industries/CrackMapExec/releases/latest | grep "cme-ubuntu-latest-3.10.zip" | cut -d : -f 2,3 | tr -d \" | wget -qi -
        unzip cme-*.zip
        rm -f cme-*.zip
        mv cme /usr/bin/cme
        chmod 755 /usr/bin/cme
      when: not cme_installed.stat.exists

    - name: Install pwntools
      ansible.builtin.pip:
        name: git+https://github.com/Gallopsled/pwntools.git@dev

    - name: Install git-dumper
      ansible.builtin.pip:
          name: git-dumper

    - name: Install faker
      ansible.builtin.pip:
          name: faker

    - name: Install trufflehog
      ansible.builtin.pip:
        name: trufflehog

    - name: Install SpyQL
      ansible.builtin.pip:
        name: spyql

    - name: Install Impacket
      ansible.builtin.pip:
        name: impacket

    - name: Install LDAPDomainDump
      ansible.builtin.pip:
        name: ldapdomaindump

    - name: Install Stego-toolkit
      ansible.builtin.git:
        repo: 'https://github.com/blackhatethicalhacking/stego-toolkit.git'
        dest: '~/Scripts/stego-toolkit'

    - name: Clone the Invoke-Obfuscation repo
      ansible.builtin.git:
        repo: 'https://github.com/danielbohannon/Invoke-Obfuscation'
        dest: /opt/Invoke-Obfuscation

    - name: Clone JumboJohn
      ansible.builtin.git:
        repo: 'https://github.com/magnumripper/JohnTheRipper'
        dest: /opt/JohnTheRipper

    - name: Clone Nishang
      ansible.builtin.git:
        repo: 'https://github.com/samratashok/nishang'
        dest: /opt/nishang

    - name: Clone Chisel
      ansible.builtin.git:
        repo: 'https://github.com/jpillora/chisel'
        dest: /opt/chisel

    - name: Clone LinEnum
      ansible.builtin.git:
        repo: 'https://github.com/rebootuser/LinEnum'
        dest: /opt/LinEnum

    - name: Clone PEASS
      ansible.builtin.git:
        repo: 'https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite'
        dest: /opt/privilege-escalation-awesome-scripts-suite

    - name: Clone PowerSploit
      ansible.builtin.git:
        repo: 'https://github.com/PowerShellMafia/PowerSploit'
        dest: /opt/PowerSploit

    - name: Clone Impacket
      ansible.builtin.git:
        repo: 'https://github.com/SecureAuthCorp/impacket'
        dest: /opt/impacket

    - name: Installing Impacket
      ansible.builtin.shell: "python3 /opt/impacket/setup.py build && python3 /opt/impacket/setup.py install"
      args:
        chdir: /opt/impacket

    - name: Clone Bloodhound.py
      ansible.builtin.git:
        repo: 'https://github.com/fox-it/BloodHound.py.git'
        dest: /opt/BloodHound.py

    - name: Clone PyFuscation
      ansible.builtin.git:
        repo: 'https://github.com/CBHue/PyFuscation.git'
        dest: /opt/PyFuscation

    - name: Clone Static Binaries
      ansible.builtin.git:
        repo: 'https://github.com/andrew-d/static-binaries'
        dest: /opt/static-binaries

    - name: Clone Kerbrute
      ansible.builtin.git:
        repo: 'https://github.com/ropnop/kerbrute.git'
        dest: /opt/kerbrute

    - name: Clone trojan-pam
      ansible.builtin.git:
        repo: 'https://github.com/AgroDan/trojan_pam'
        dest: /opt/trojan_pam

    - name: Building Kerbrute...
      ansible.builtin.command: chdir=/opt/kerbrute make linux

    - name: Get Evil-WinRM via gem installer
      community.general.gem:
        name: evil-winrm
        norc: yes
        state: latest
        user_install: no

    - name: Setting up Terminator
      ansible.builtin.shell: |
        mkdir ~/.config/terminator
        cp ./terminatorconfig ~/.config/terminator/config

    - name: Fish shell setup
      ansible.builtin.shell: |
        curl -kL https://get.oh-my.fish | fish
        fish -c "omf install bobthefish && exit"
